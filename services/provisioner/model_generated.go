/*
 * Copyright Â© 2022 Splunk, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"): you may
 * not use this file except in compliance with the License. You may obtain
 * a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * Provisioner
 *
 * With the Provisioner service in Splunk Cloud Services, you can provision and manage tenants.
 *
 * API version: v1beta1.4 (recommended default)
 * Generated by: OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
 */

package provisioner

type Error struct {
	// Service error code
	Code string `json:"code"`
	// Human readable error message
	Message string `json:"message"`
}

type InviteBody struct {
	Email   string   `json:"email"`
	Comment *string  `json:"comment,omitempty"`
	Groups  []string `json:"groups,omitempty"`
}

type InviteInfo struct {
	Comment   string           `json:"comment"`
	CreatedAt string           `json:"createdAt"`
	CreatedBy string           `json:"createdBy"`
	Email     string           `json:"email"`
	Errors    InviteInfoErrors `json:"errors"`
	ExpiresAt string           `json:"expiresAt"`
	Groups    []string         `json:"groups"`
	InviteID  string           `json:"inviteID"`
	Status    InviteInfoStatus `json:"status"`
	Tenant    string           `json:"tenant"`
	UpdatedAt string           `json:"updatedAt"`
	UpdatedBy string           `json:"updatedBy"`
}

type InviteInfoStatus string

// List of InviteInfoStatus
const (
	InviteInfoStatusCreated  InviteInfoStatus = "created"
	InviteInfoStatusInvited  InviteInfoStatus = "invited"
	InviteInfoStatusAccepted InviteInfoStatus = "accepted"
	InviteInfoStatusRejected InviteInfoStatus = "rejected"
	InviteInfoStatusExpired  InviteInfoStatus = "expired"
	InviteInfoStatusFailed   InviteInfoStatus = "failed"
	InviteInfoStatusInvalid  InviteInfoStatus = "invalid"
)

type InviteInfoErrors []InviteInfoErrorsItems

type InviteInfoErrorsItems struct {
	Action  string  `json:"action"`
	Code    string  `json:"code"`
	Message string  `json:"message"`
	Group   *string `json:"group,omitempty"`
}

type Invites []InviteInfo

type TenantInfo struct {
	CreatedAt string `json:"createdAt"`
	CreatedBy string `json:"createdBy"`
	Name      string `json:"name"`
	Status    string `json:"status"`
}

type Tenants []TenantInfo

type UpdateInviteBody struct {
	Action UpdateInviteBodyAction `json:"action"`
}

type UpdateInviteBodyAction string

// List of UpdateInviteBodyAction
const (
	UpdateInviteBodyActionAccept UpdateInviteBodyAction = "accept"
	UpdateInviteBodyActionReject UpdateInviteBodyAction = "reject"
	UpdateInviteBodyActionResend UpdateInviteBodyAction = "resend"
)
