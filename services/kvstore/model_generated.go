/*
 * Copyright Â© 2022 Splunk, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"): you may
 * not use this file except in compliance with the License. You may obtain
 * a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * KV Store API
 *
 * With the Splunk Cloud KV store service in Splunk Cloud Services, you can save and retrieve data within your Splunk Cloud apps, enabling you to manage and maintain state in your application.
 *
 * API version: v1beta1.2 (recommended default)
 * Generated by: OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
 */

package kvstore

type ErrorResponse struct {
	// Internal status code of the error.
	Code string `json:"code"`
	// Detailed error message.
	Message string `json:"message"`
}

type IndexDefinition struct {
	Fields []IndexFieldDefinition `json:"fields"`
	// The name of the index.
	Name string `json:"name"`
}

type IndexDescription struct {
	// The collection name.
	Collection *string                `json:"collection,omitempty"`
	Fields     []IndexFieldDefinition `json:"fields,omitempty"`
	// The name of the index.
	Name *string `json:"name,omitempty"`
}

type IndexFieldDefinition struct {
	// The sort direction for the indexed field.
	Direction int32 `json:"direction"`
	// The name of the field to index.
	Field string `json:"field"`
}

type PingResponse struct {
	// Database status.
	Status PingResponseStatus `json:"status"`
	// If database is not healthy, detailed error message.
	ErrorMessage *string `json:"errorMessage,omitempty"`
}

// PingResponseStatus : Database status.
type PingResponseStatus string

// List of PingResponseStatus
const (
	PingResponseStatusHealthy   PingResponseStatus = "healthy"
	PingResponseStatusUnhealthy PingResponseStatus = "unhealthy"
	PingResponseStatusUnknown   PingResponseStatus = "unknown"
)

type Record struct {
	// Key of the resulting record.
	Key string `json:"_key"`
	// User of the resulting record.
	User string `json:"_user"`
}
